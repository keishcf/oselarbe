# Generated by Django 5.0.6 on 2024-06-04 08:24

import django.db.models.deletion
import shortuuid.django_fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.  Unselect this instead of deleting accounts.', verbose_name='active')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether this user has completed the email verification process to allow login.', verbose_name='verified')),
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-', length=15, max_length=40, prefix='', primary_key=True, serialize=False)),
                ('is_business', models.BooleanField(default=False)),
                ('is_personal', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessAccount',
            fields=[
            ],
            options={
                'verbose_name': 'Business Account',
                'verbose_name_plural': 'Business Accounts',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='PersonalAccount',
            fields=[
            ],
            options={
                'verbose_name': 'Personal account',
                'verbose_name_plural': 'Personal accounts',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='PersonalLocation',
            fields=[
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='location', serialize=False, to='accounts.personalaccount')),
                ('name', models.CharField(blank=True, help_text='Name of the location', max_length=100, null=True, verbose_name='Name')),
                ('city', models.CharField(blank=True, help_text='Your city', max_length=100, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, help_text='Your state', max_length=100, null=True, verbose_name='State')),
                ('country', models.CharField(blank=True, help_text='Your country', max_length=100, null=True, verbose_name='Country')),
                ('zip_code', models.CharField(blank=True, help_text='Your zip code', max_length=100, null=True, verbose_name='Zip code')),
                ('address', models.CharField(blank=True, help_text='Your address', max_length=100, null=True, verbose_name='Address')),
            ],
            options={
                'verbose_name': 'Personal profile location',
                'verbose_name_plural': 'Personal profiles location',
            },
        ),
        migrations.CreateModel(
            name='PersonalProfile',
            fields=[
                ('user', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to='accounts.personalaccount')),
                ('profile_picture', models.ImageField(blank=True, help_text='Upload a profile picture', null=True, upload_to='profile_pictures/', verbose_name='Profile picture')),
                ('bio', models.TextField(blank=True, help_text='A short description about yourself', null=True, verbose_name='Bio')),
                ('date_of_birth', models.DateField(blank=True, help_text='Your date of birth', null=True, verbose_name='Date of birth')),
                ('nickname', models.CharField(blank=True, help_text='Your nickname', max_length=30, null=True, verbose_name='Nickname')),
                ('headline', models.CharField(blank=True, help_text='A short headline about yourself', max_length=100, null=True, verbose_name='Headline')),
                ('loves', models.TextField(blank=True, help_text='Things you love', null=True, verbose_name='Loves')),
                ('find_me', models.CharField(blank=True, help_text='Where to find you', max_length=100, null=True, verbose_name='Find me in')),
                ('hometown', models.CharField(blank=True, help_text='Your hometown', max_length=100, null=True, verbose_name='Hometown')),
                ('primary_language', models.CharField(blank=True, max_length=100, null=True, verbose_name='Primary language')),
                ('web_url', models.URLField(blank=True, help_text='Your website URL', null=True, verbose_name='Web URL')),
                ('why_read', models.TextField(blank=True, help_text='Why you read', null=True, verbose_name='Why read')),
                ('second_favorite_website', models.URLField(blank=True, null=True, verbose_name='Second favorite website')),
                ('favorite_dish', models.CharField(blank=True, help_text='Your favorite dish', max_length=100, null=True, verbose_name='Favorite movie')),
                ('country', models.CharField(blank=True, help_text='Your country', max_length=100, null=True, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Personal profile',
                'verbose_name_plural': 'Personal profiles',
            },
        ),
        migrations.CreateModel(
            name='PersonalSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name of the social media', max_length=100, null=True, verbose_name='Name')),
                ('url', models.URLField(blank=True, help_text='URL of the social media', null=True, verbose_name='URL')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='social', to='accounts.personalaccount')),
            ],
            options={
                'verbose_name': 'Personal profile social',
                'verbose_name_plural': 'Personal profiles social',
            },
        ),
    ]
