# Generated by Django 5.0.6 on 2024-06-04 08:24

import django.db.models.deletion
import shortuuid.django_fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('svg_icon', models.FileField(blank=True, null=True, upload_to='category_icons/')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='business.businesscategory')),
            ],
            options={
                'unique_together': {('name', 'parent')},
            },
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', shortuuid.django_fields.ShortUUIDField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-', editable=False, length=22, max_length=40, prefix='', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='The brand name of the business.', max_length=255, null=True, unique=True)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=255, null=True, unique=True)),
                ('description', models.TextField()),
                ('address', models.CharField(blank=True, help_text='The street address of the business location.', max_length=255, null=True)),
                ('city', models.CharField(help_text='The city or town where the business is located.', max_length=100)),
                ('state', models.CharField(help_text='State, District or province where the business is located.', max_length=100)),
                ('postal_code', models.CharField(blank=True, help_text='The postal code of the business location.', max_length=20, null=True)),
                ('country', models.CharField(help_text='Country Where your business is located at', max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('have_branches', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(blank=True, related_name='businesses', to='business.businesscategory')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to='accounts.businessaccount')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='business.businessprofile')),
            ],
            options={
                'verbose_name': 'Business profile',
                'verbose_name_plural': 'Business profiles',
            },
        ),
        migrations.CreateModel(
            name='BusinessMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='business/logos/')),
                ('banner', models.ImageField(blank=True, null=True, upload_to='business/banners/')),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='business.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessMapLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='location', to='business.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('opening', models.TimeField()),
                ('closing', models.TimeField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hours', to='business.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(help_text='A valid phone number, please. This phone number is used for contact purposes if there is any enquiry.', max_length=20)),
                ('email', models.EmailField(help_text='A valid email address, please. This email is used for contact purposes if there is any enquiry.', max_length=255)),
                ('website', models.URLField(blank=True, help_text='A valid URL make sure to include http:// or https://.', max_length=255, null=True)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='business.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('asker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asked_questions', to='accounts.personalaccount')),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='business.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='business.businessquestions')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField()),
                ('title', models.CharField(help_text='Title your review', max_length=100)),
                ('review', models.TextField()),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='business.businessprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='accounts.personalaccount')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessShortMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(help_text='A short message about the business. This message is displayed on the business profile page.', max_length=160)),
                ('business', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='short_message', to='business.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessSocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the social media platform.', max_length=100)),
                ('url', models.URLField(help_text='A valid URL make sure to include http:// or https://.', max_length=255)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_media', to='business.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ReplyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reply', models.TextField()),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.businessaccount')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='business.businessreview')),
            ],
        ),
        migrations.CreateModel(
            name='ReviewThumbsUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbsup', to='business.businessreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbsup_reviews', to='accounts.personalaccount')),
            ],
            options={
                'unique_together': {('review', 'user')},
            },
        ),
    ]
